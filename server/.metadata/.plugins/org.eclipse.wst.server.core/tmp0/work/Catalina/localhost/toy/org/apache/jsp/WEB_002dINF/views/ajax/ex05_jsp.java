/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.78
 * Generated at: 2022-07-06 03:16:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.ajax;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class ex05_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("jar:file:/C:/class/server/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/ToyProject/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/views/inc/asset.jsp", Long.valueOf(1656386741662L));
    _jspx_dependants.put("/WEB-INF/views/inc/header.jsp", Long.valueOf(1656902321771L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1655972278192L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Toy Project</title>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/toy/asset/css/bootstrap.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/toy/asset/css/toy.css\" />\r\n");
      out.write("<link rel=\"shortcut icon\" href=\"/toy/asset/favicon.ico\">\r\n");
      out.write("\r\n");
      out.write("<script src=\"/toy/asset/js/jquery-1.12.4.js\"></script>\r\n");
      out.write("<script src=\"/toy/asset/js/bootstrap.js\"></script>\r\n");
      out.write("<script src=\"/toy/asset/js/toy.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://kit.fontawesome.com/e4f03f4c6c.js\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("	fieldset {\r\n");
      out.write("		margin: 30px 0;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	fieldset input {\r\n");
      out.write("		margin: 5px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	#msg1, #msg2, #msg3 {\r\n");
      out.write("		margin: 15px;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	<main>\r\n");
      out.write("		");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("	.fa-solid.fa-bolt {\r\n");
      out.write("	\r\n");
      out.write("		");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("		\r\n");
      out.write("		");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	header > h1 > span {\r\n");
      out.write("		font-size: 18px;\r\n");
      out.write("		color: #777;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("<header>\r\n");
      out.write("	<h1>\r\n");
      out.write("		<i class=\"fa-solid fa-bolt\"></i> \r\n");
      out.write("		Toy Project \r\n");
      out.write("		");
      if (_jspx_meth_c_005fif_005f2(_jspx_page_context))
        return;
      out.write("		\r\n");
      out.write("		</h1>\r\n");
      out.write("	<nav>\r\n");
      out.write("		<ul>\r\n");
      out.write("			<li><a href=\"/toy/index.do\"><i class=\"fa-solid fa-house\"></i> Home</a></li>\r\n");
      out.write("			\r\n");
      out.write("			");
      if (_jspx_meth_c_005fif_005f3(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("			\r\n");
      out.write("			");
      if (_jspx_meth_c_005fif_005f4(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("			\r\n");
      out.write("			<li><a href=\"/toy/board/list.do\">Board</a></li>\r\n");
      out.write("			<li><a href=\"/toy/etc/chart.do\">Chart</a></li>\r\n");
      out.write("			<li><a href=\"/toy/etc\">Etc</a></li>\r\n");
      out.write("		</ul>\r\n");
      out.write("	</nav>\r\n");
      out.write("</header>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		<section>\r\n");
      out.write("			\r\n");
      out.write("			<h2>데이터 포맷</h2>\r\n");
      out.write("			\r\n");
      out.write("			<fieldset>\r\n");
      out.write("				<legend>Text</legend>\r\n");
      out.write("				<input type=\"text\" name=\"txt1\" id=\"txt1\" class=\"form-control\">\r\n");
      out.write("				<input type=\"button\" value=\"확인\" id=\"btn1\" class=\"btn btn-primary\">\r\n");
      out.write("				<div id=\"msg1\"></div>\r\n");
      out.write("			</fieldset>\r\n");
      out.write("			\r\n");
      out.write("			<fieldset>\r\n");
      out.write("				<legend>XML</legend>\r\n");
      out.write("				<input type=\"text\" name=\"txt2\" id=\"txt2\" class=\"form-control\">\r\n");
      out.write("				<input type=\"button\" value=\"확인\" id=\"btn2\" class=\"btn btn-primary\">\r\n");
      out.write("				<div id=\"msg2\"></div>\r\n");
      out.write("			</fieldset>\r\n");
      out.write("			\r\n");
      out.write("			<fieldset>\r\n");
      out.write("				<legend>JSON</legend>\r\n");
      out.write("				<input type=\"text\" name=\"txt3\" id=\"txt3\" class=\"form-control\">\r\n");
      out.write("				<input type=\"button\" value=\"확인\" id=\"btn3\" class=\"btn btn-primary\">\r\n");
      out.write("				<div id=\"msg3\"></div>\r\n");
      out.write("			</fieldset>\r\n");
      out.write("			\r\n");
      out.write("			<fieldset>\r\n");
      out.write("				<legend>Text + XML + JSON</legend>\r\n");
      out.write("				<input type=\"text\" name=\"txt4\" id=\"txt4\" class=\"form-control\">\r\n");
      out.write("				<input type=\"button\" value=\"확인\" id=\"btn4\" class=\"btn btn-primary\">\r\n");
      out.write("				<div id=\"msg4\"></div>\r\n");
      out.write("			</fieldset>\r\n");
      out.write("			\r\n");
      out.write("			<fieldset>\r\n");
      out.write("				<legend>Text + XML + JSON</legend>\r\n");
      out.write("				<form id=\"form\">\r\n");
      out.write("					<input type=\"text\" name=\"subject\" id=\"subject\" class=\"form-control\" placeholder=\"제목\">\r\n");
      out.write("					<input type=\"text\" name=\"content\" id=\"content\" class=\"form-control\" placeholder=\"내용\">\r\n");
      out.write("					<input type=\"text\" name=\"id\" id=\"id\" class=\"form-control\" value=\"hong\">\r\n");
      out.write("				</form>\r\n");
      out.write("				<input type=\"button\" value=\"쓰기\" id=\"btn5\" class=\"btn btn-primary\">\r\n");
      out.write("				<div id=\"msg5\"></div>\r\n");
      out.write("			</fieldset>\r\n");
      out.write("			\r\n");
      out.write("			<!-- insert into tblBoard (seq, subject, content, id, regdate, readcount, thread, depth, filename, orgfilename) values (seqBoard.nextVal, ?, ?, ?, default, default, ?, ?, ?, ?) -->\r\n");
      out.write("			\r\n");
      out.write("		</section>\r\n");
      out.write("	</main>\r\n");
      out.write("		\r\n");
      out.write("	<script>\r\n");
      out.write("		\r\n");
      out.write("		/*\r\n");
      out.write("		\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				type: 'GET',	//요청 메소드 방식(공통)\r\n");
      out.write("				url: 'URL',		//응답 주소(공통)\r\n");
      out.write("				data: '',		//전송 데이터(줄때)\r\n");
      out.write("				dataType: '',	//응답 데이터 타입(받을때) > 'text', 'json', 'xml'\r\n");
      out.write("				success: fn,	//응답 콜백 함수(받을때)\r\n");
      out.write("				error: fn		//에러 처리 함수(공통)\r\n");
      out.write("			});\r\n");
      out.write("		\r\n");
      out.write("		*/\r\n");
      out.write("	\r\n");
      out.write("		//서버 > (데이터:Text) > 클라이언트\r\n");
      out.write("		$('#btn1').click(function() {\r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				type: 'GET',\r\n");
      out.write("				url: '/toy/ajax/ex05text.do',\r\n");
      out.write("				dataType: 'text',\r\n");
      out.write("				success: function(result) {\r\n");
      out.write("					//이름만 넘겨받았을때\r\n");
      out.write("					//$('#msg1').text(result);\r\n");
      out.write("					\r\n");
      out.write("					//다중 데이터\r\n");
      out.write("					//let temp = result.split(',');\r\n");
      out.write("					//$('#msg1').append('<ul>');\r\n");
      out.write("					//$('#msg1').append('<li>' + temp[0] + '</li>');\r\n");
      out.write("					//$('#msg1').append('<li>' + temp[1] + '</li>');\r\n");
      out.write("					//$('#msg1').append('<li>' + temp[2] + '</li>');\r\n");
      out.write("					//$('#msg1').append('<li>' + temp[3] + '</li>');\r\n");
      out.write("					//$('#msg1').append('</ul>');\r\n");
      out.write("					\r\n");
      out.write("					//다중데이터\r\n");
      out.write("					let temp = result.split('\\r\\n');\r\n");
      out.write("					\r\n");
      out.write("					temp.forEach(function(item, index) {\r\n");
      out.write("						let temp2 = item.split(',');\r\n");
      out.write("						\r\n");
      out.write("						$('#msg1').append('<ul>');\r\n");
      out.write("						$('#msg1').append('<li>' + temp2[0] + '</li>');\r\n");
      out.write("						$('#msg1').append('<li>' + temp2[1] + '</li>');\r\n");
      out.write("						$('#msg1').append('<li>' + temp2[2] + '</li>');\r\n");
      out.write("						$('#msg1').append('</ul>');\r\n");
      out.write("						$('#msg1').append('<br>');\r\n");
      out.write("						\r\n");
      out.write("					});\r\n");
      out.write("				},\r\n");
      out.write("				error: function(a,b,c) {\r\n");
      out.write("					console.log(a,b,c);\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("			\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		//서버 > (데이터:XML) > 클라이언트\r\n");
      out.write("		$('#btn2').click(function() {\r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				type: 'GET',\r\n");
      out.write("				url: '/toy/ajax/ex05xml.do',\r\n");
      out.write("				dataType: 'xml',\r\n");
      out.write("				success: function(result) {\r\n");
      out.write("					\r\n");
      out.write("					//			> DOM document 객체\r\n");
      out.write("					//result	> xml 문서 객체\r\n");
      out.write("					//alert(result);\r\n");
      out.write("					\r\n");
      out.write("					//단일 데이터\r\n");
      out.write("					//$('#msg2').text($(result).find(\"name\").text());\r\n");
      out.write("					\r\n");
      out.write("					//다중 데이터\r\n");
      out.write("					//<item>\r\n");
      out.write("					//	<subject>게시판 리스트에 보일 제목입니다.</subject>\r\n");
      out.write("					//	<content>클릭하면 보이는 내용입니다.</content>\r\n");
      out.write("					//	<name>홍길동</name>\r\n");
      out.write("					//	<regdate>2022-07-06 09:27:56</regdate>\r\n");
      out.write("					//</item>\r\n");
      out.write("					\r\n");
      out.write("					//let subject = $(result).find('subject').text();\r\n");
      out.write("					//let content = $(result).find('content').text();\r\n");
      out.write("					//let name = $(result).find('name').text();\r\n");
      out.write("					//let regdate = $(result).find('regdate').text();\r\n");
      out.write("					\r\n");
      out.write("					//$('#msg2').append('<ul>');\r\n");
      out.write("					//$('#msg2').append('<li>' + subject + '</li>');\r\n");
      out.write("					//$('#msg2').append('<li>' + content + '</li>');\r\n");
      out.write("					//$('#msg2').append('<li>' + name + '</li>');\r\n");
      out.write("					//$('#msg2').append('<li>' + regdate + '</li>');\r\n");
      out.write("					//$('#msg2').append('</ul>');\r\n");
      out.write("					//$('#msg2').append('<br>');\r\n");
      out.write("					\r\n");
      out.write("					$(result).find('item').each(function(index, item) {\r\n");
      out.write("						\r\n");
      out.write("						//1회전 > item > <item> 태그\r\n");
      out.write("						let subject = $(item).find('subject').text();\r\n");
      out.write("						let name = $(item).find('name').text();\r\n");
      out.write("						let regdate = $(item).find('regdate').text();\r\n");
      out.write("						\r\n");
      out.write("						$('#msg2').append('<ul>');\r\n");
      out.write("						$('#msg2').append('<li>' + subject + '</li>');\r\n");
      out.write("						$('#msg2').append('<li>' + name + '</li>');\r\n");
      out.write("						$('#msg2').append('<li>' + regdate + '</li>');\r\n");
      out.write("						$('#msg2').append('</ul>');\r\n");
      out.write("						$('#msg2').append('<br>');\r\n");
      out.write("						\r\n");
      out.write("					});\r\n");
      out.write("					\r\n");
      out.write("					\r\n");
      out.write("					\r\n");
      out.write("				},\r\n");
      out.write("				error: function(a,b,c) {\r\n");
      out.write("					console.log(a,b,c);\r\n");
      out.write("				}\r\n");
      out.write("			})\r\n");
      out.write("			\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		//서버 > (데이터:JSON) > 클라이언트\r\n");
      out.write("		$('#btn3').click(function() {\r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				type: 'GET',\r\n");
      out.write("				url: '/toy/ajax/ex05json.do',\r\n");
      out.write("				dataType: 'json',\r\n");
      out.write("				success: function(result) {\r\n");
      out.write("					\r\n");
      out.write("					//단일 데이터\r\n");
      out.write("					//result = {\"name:\": \"홍길동\"}\r\n");
      out.write("					\r\n");
      out.write("					//alert(result.name);\r\n");
      out.write("					//alert(result.[\"name\"]);\r\n");
      out.write("					\r\n");
      out.write("					//$('#msg3').text(result.name);\r\n");
      out.write("					\r\n");
      out.write("					\r\n");
      out.write("					//다중 데이터\r\n");
      out.write("					//{\r\n");
      out.write("					//  \"subject\": \"게시판 리스트에 보일 제목입니다.\",\r\n");
      out.write("					//  \"content\": \"클릭하면 보이는 내용입니다.\",\r\n");
      out.write("					//  \"name\": \"홍길동\",\r\n");
      out.write("					//  \"regdate\": \"2022-07-06 09:27:56\"\r\n");
      out.write("					//}\r\n");
      out.write("					\r\n");
      out.write("					//alert(result.subject);\r\n");
      out.write("					//alert(result.content);\r\n");
      out.write("					\r\n");
      out.write("					\r\n");
      out.write("					//$('#msg3').append('<ul>');\r\n");
      out.write("					//$('#msg3').append('<li>' + result.subject + '</li>');\r\n");
      out.write("					//$('#msg3').append('<li>' + result.content + '</li>');\r\n");
      out.write("					//$('#msg3').append('<li>' + result.name + '</li>');\r\n");
      out.write("					//$('#msg3').append('<li>' + result.regdate + '</li>');\r\n");
      out.write("					//$('#msg3').append('</ul>');\r\n");
      out.write("					//$('#msg3').append('<br>');\r\n");
      out.write("					\r\n");
      out.write("					\r\n");
      out.write("					//다중 데이터\r\n");
      out.write("					$(result).each(function(index, item) {\r\n");
      out.write("						$('#msg3').append('<ul>');\r\n");
      out.write("						$('#msg3').append('<li>' + item.subject + '</li>');\r\n");
      out.write("						$('#msg3').append('<li>' + item.name + '</li>');\r\n");
      out.write("						$('#msg3').append('<li>' + item.regdate + '</li>');\r\n");
      out.write("						$('#msg3').append('</ul>');\r\n");
      out.write("						$('#msg3').append('<br>');\r\n");
      out.write("					});\r\n");
      out.write("					\r\n");
      out.write("					\r\n");
      out.write("					\r\n");
      out.write("					\r\n");
      out.write("				},\r\n");
      out.write("				error: function(a,b,c) {\r\n");
      out.write("					console.log(a,b,c);\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("			\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		//클라이언트 > (데이터) > 서버\r\n");
      out.write("		$('#btn4').click(function() {\r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				type: 'GET',\r\n");
      out.write("				url: '/toy/ajax/ex05data.do',\r\n");
      out.write("				data: 'txt4=' + $('#txt4').val(),\r\n");
      out.write("				dataType: 'json',\r\n");
      out.write("				success: function(result) {\r\n");
      out.write("					$('#msg4').append('<div>status: ' + result.status + '</div>');\r\n");
      out.write("					$('#msg4').append('<div>value: ' + result.value + '</div>');\r\n");
      out.write("				},\r\n");
      out.write("				error: function(a,b,c) {\r\n");
      out.write("					console.log(a,b,c);\r\n");
      out.write("				}\r\n");
      out.write("			})\r\n");
      out.write("			\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		$('#btn5').click(function() {\r\n");
      out.write("			\r\n");
      out.write("			//alert($('#form').serialize()); //직렬화 > 여러 형태의 데이터 구조를 한줄의 데이터 형태로 바꾸는 작업\r\n");
      out.write("			\r\n");
      out.write("			//alert('subject=' + $('#subject').val() + '&content=' + $('#content').val + '&id=' + $('#id').val());\r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				type: 'POST',\r\n");
      out.write("				url: '/toy/ajax/ex05board.do',\r\n");
      out.write("				//data: 'subject=' + $('#subject').val() + '&content=' + $('#content').val + '&id=' + $('#id').val(),\r\n");
      out.write("				data: $('#form').serialize(),\r\n");
      out.write("				dataType: 'json',\r\n");
      out.write("				success: function(result) {\r\n");
      out.write("					\r\n");
      out.write("					$('#msg5').text(result.result == '1' ? '성공' : '실패');\r\n");
      out.write("					\r\n");
      out.write("				},\r\n");
      out.write("				error: function(a,b,c) {\r\n");
      out.write("					console.log(a,b,c);\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("			\r\n");
      out.write("		});\r\n");
      out.write("	\r\n");
      out.write("	</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/inc/header.jsp(8,2) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty auth and lv == 2}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("		color: yellow;\r\n");
          out.write("		");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/views/inc/header.jsp(12,2) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty auth and lv == 1}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("		color: cornflowerblue;\r\n");
          out.write("		");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f2_reused = false;
    try {
      _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f2.setParent(null);
      // /WEB-INF/views/inc/header.jsp(26,2) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty auth}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
      if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("		<span>by ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${auth}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write('(');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write(")</span>\r\n");
          out.write("		");
          int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
      _jspx_th_c_005fif_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f3 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f3_reused = false;
    try {
      _jspx_th_c_005fif_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f3.setParent(null);
      // /WEB-INF/views/inc/header.jsp(34,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f3.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty auth}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f3 = _jspx_th_c_005fif_005f3.doStartTag();
      if (_jspx_eval_c_005fif_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("			<li><a href=\"/toy/member/register.do\">Register</a></li>\r\n");
          out.write("			<li><a href=\"/toy/member/login.do\">Login</a></li>\r\n");
          out.write("			");
          int evalDoAfterBody = _jspx_th_c_005fif_005f3.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f3);
      _jspx_th_c_005fif_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f4(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f4 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f4_reused = false;
    try {
      _jspx_th_c_005fif_005f4.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f4.setParent(null);
      // /WEB-INF/views/inc/header.jsp(39,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f4.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty auth}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f4 = _jspx_th_c_005fif_005f4.doStartTag();
      if (_jspx_eval_c_005fif_005f4 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("			<li><a href=\"/toy/member/info.do\">Info</a></li>\r\n");
          out.write("			<li><a href=\"/toy/member/logout.do\">Logout</a></li>\r\n");
          out.write("			");
          int evalDoAfterBody = _jspx_th_c_005fif_005f4.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f4);
      _jspx_th_c_005fif_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f4, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f4_reused);
    }
    return false;
  }
}
