Q1)

출력 과정에서 %n은 다른 프로그램에서 호환 가능성이 높아 \n보다 좋을 수도 있다.

int age = (2022 - Integer.parseInt(input) + 1);
-- 나이 계산식에서 입력받은 값을 int값으로 변환 후 바로 계산하는 방법도 가능하며

나이 출력 값에서 0보다 작은 수가 입력되어 출력되지 않도록 조건식을 넣으면 0보다 작은 수를 넣을 수 없다.

-------------------------------------------------------------------------------------------------

Q2)

double num1 = Double.parseDouble(input1);
double num2 = Double.parseDouble(input2);
-- 나누기 출력부분 전에서 double로 형변환을 먼저 하는 방법과

System.out.printf("%d / %d = %.1f%n", num1, num2, (double)num1 / num2);
-- (double) 형변환 후 출력하는 방법도 있다.

%,.0f 여도 결과값은 같으나 가독성이 떨어진다는 단점이 있다.

-------------------------------------------------------------------------------------------------

Q3)

System.out.print("너비(cm) : ");
		String input1 = reader.readLine();
		int width = Integer.parseInt(input1);

		System.out.print("높이(cm) : ");
		String input2 = reader.readLine();
		int height = Integer.parseInt(input2);
--바로 형변환을 할떄는 하나의 그룹처럼 보인다는 점이 있고

System.out.print("가로(cm): ");
		String Horizontal = reader.readLine();

		System.out.print("높이(cm): ");
		String Height = reader.readLine();
		
		int Ho = Integer.parseInt(Horizontal);
		int He = Integer.parseInt(Height);
-- 따로 빼 두었을때는 정리가 되어있는 느낌이 든다.

		int area = iwidth * iheight;
		int circum = iwidth * 2 + iheight * 2;
-- 미리 계산후 넣는 방법과 

System.out.printf("사각형의 둘레는 %d㎠입니다.", Ho * 2 + He * 2);
-- 콘솔 출력 메소드 안에서 계산하는 방법이 있다.


System.out.printf((num1 > 0) && (num2 > 0) ?
							"사각형의 넓이는 %dcm²입니다.\n사각형의 둘레는 %dcm입니다.\n"
							: "정확한 길이를 입력해 주세요.\n"
							, num1 * num2
							, 2 * (num1 + num2));
-- 너비나 높이는 0보다 커야한다는 생각에 조건식을 달았다.

-------------------------------------------------------------------------------------------------

Q4)

입력 받는 값이 int로 형변환을 하면 소수로 입력했을 시에 값이 산출하기 힘드니
Double로 형변환을 하는것이 좋을 것 같다.

-------------------------------------------------------------------------------------------------

Q5)

PI 값과 INCH 값을 변하지 않는 값이라고 생각해서 final로 상수 처리를 해주었다
> 가독성이 좋은것 같다

math.PI(클래스 메소드) 선언해 를 사용해서 PI값을 받아 출력

-------------------------------------------------------------------------------------------------

Q6)

long으로 변환 후 값을 출력했다 > 값이 버려진다고 생각했다

double로 선언하면 값이 안버려진다 > int 값으로 변환하는 방법

출력라인에서 실수와 곱셈 후 int로 형변환을 해주었다

입력받은 돈 값을 double 로 값을 받는 것 보다 int 값으로 출력받는게 괜찮은 것 같다.

계산식 등에서 ()로 묶어주면 가독성이 좋아진다

백재민의 코드는 여러가지 형변환이 많아서 복잡해보인다.

-------------------------------------------------------------------------------------------------

Q7)

*** char 값을 예외처리??
> char a4 = (char)(a3 - 32); //char로 형변환을 하지않으면 에러
>System.out.printf("소문자 '%s'의 대문자는 '%s'입니다. ", alpha, (char)(alpha-32));
	//(char)(alpha-32) 부분에서는 char로 형변환을 하지 않아도 실행이 가능하다.
	// 두 코드의 차이점은?

마지막에 형변환을 안하니깐 숫자로 나온다
>System.out.printf("소문자 '%s'의 대문자는 '%s'입니다. ", alpha, (char)(alpha-32));
	//(char)로 형변환을 하지 않아도 정상적인 값이 출력된다.

char 값으로 대입 받는다면 문장을 대입해도 맨 앞의 값만 받나?
	//char로 값을 변환해서 그러는 것 같다?

char 값을 int 값을 형변환 하지 않아도 된다.

콘솔 출력에서 작은따옴표는 \가 없어도 입력이 된다.