-- ex26_modeling.sql

/*

    1. ANSI-SQL
    2. 설계
    3. PL/SQL
    
    
    데이터베이스 설계
    1. 요구사항 수집 및 분석
    2. 개념 데이터 모델링
    3. 논리 데이터 모델링
    4. 물리 데이터 모델링
    5. 데이터베이스 구축(구현)


    데이터 모델링 (= 데이터베이스 모델링)
    - 요구 분석 기반 > 수집한 데이터 > 분석 > 저장 구조 생성 > 도식화 > ERD(산출물)
    - 데이터를 저장하기 위해 데이터 구조를 설계하는 작업
    - DBMS(오라클, DB Tool, MySQL)의 종류를 결정하지 않는다. > 추상화
    - 개념 + 논리 + 물리
    - 개념 > 아주 간단하게 표현한 설계도 > 테이블 이름과 관계 정도만 기술 >> 방향을 보기위한 프로토타입
    - 논리 > 관계형 데이터베이스의 기본 설정 > 속성 정의 + 도메인 정의(이름은 몇글자, 학번은 숫자로한다 등등) + 키(PK,FK)... > 제대로 된 ERD
    - 물리 > 특정 DBMS 결정 + DBMS에 종속적인 나머지 설계 + 물리적 식별자..
    
    - 대부분은 개념, 논리, 물리를 번갈아 가면서 모델링을 한다.
    
    
    용어 정리
    1. ERD, Entity Relationship Diagram
    - 엔티티의 관계를 표현한 그림
    - 엔티티간의 관계를 표현한 그림
    - 데이터베이스 모델링 기법 중 하나
    - 손스케치, 오피스, 전문툴(eXERD, ER-WIN)
    
    2. Entity, 엔티티
    - 다른 Entity와 분류(구분)될 수 있고, 다른 Entity에 대해 정해진 관계를 맺을 수 있는 데이터 단위
    - 테이블(but 모델링에서는 엔티티로 부르는게 좋다.)
    - 릴레이션 = 객체 = 레코드 = 엔티티
        a. 학생 정보 관리
            - 정보 수집 : 아이디, 학생명, 나이, 주소, 연락처.....
            - 학생(아이디, 학생명, 나이, 주소, 연락처) > 학생 엔티티가 된다.
        b. 강의실 정보 관리
            - 정보 수집 : 강의실 호수, 크기, 인원 수, 용도...
            - 강의실(호수, 크기, 인원 수, 용도) > 강의실 엔티티가 된다.
            
    3. Attribute, 속성
    - 엔티티내의 세부 정보
    - 엔티티를 만들기 위해서 모인 여러가지 정보
    - 컬럼
    
    4. Entity Relationship, 엔티티 관계
    - 학생 <-> 학급 <-> 교사
    
    
    
    ERD > Entity, Attribute, Relation 등 표현하는 방법 > 그림 그리는 방법
    
    1. Entity
    - 사각형
    - 이름을 작성
    - 하나의 엔티티명은 ERD내에 중복 불가능
    
    2. Attribute
    - 엔티티안에 표현(목록 형태)
    - 추가 표기사항(속성에 대한 성질 기술)
        a. NN, Not Null
            - 해당 속성을 반드시 작성해야 한다.
            - 필수값
        b. ND, Not Duplicate
            - 해당 속성은 중복될 수 없다.
            - 유일값(Unique)
        1. 중복되면 안되고, 생략되면 안된다.(NN,ND)
            - #*속성명
        2. 생략되면 안된다.(NN)
            - *속성명
        3. 중복되면 안된다.(ND)
            - #속성명
        4. 중복되도 되고, 생략되도 된다.
            - 속성명
            - o속성명
            - optional
    
    3. Relationship
    - 가장 중요한 표현
    - 엔티티와 엔티티의 관계
    - 관계의 종류(패턴)
    
        A엔티티(주체) : B엔티티(상대)
        a. 1:1
            - 1개의 A는 1개의 B와 관계
        b. 1:0
            - 1개의 A는 0개의 B와 관계 > 무관계 > 다른 표현과 섞여서 쓰임
        c. 1:N
            - 1개의 A는 1개 이상의 B와 관계
        d. 1:N
            - 1개의 A는 0개 이상의 B와 관계
            - b + c
    
    
    
    
    비디오 대여점
    
    1. 엔티티 정의
        - 장르
        - 비디오
        - 회원
        - 대여 정보
    
    2. 속성 정의
    
    3. 기본키 선정
    
    4. 관계 맺기(******)
    
    
    ----------------------------- 논리 다이어그램 > 논리 ERD
    
    5. 물리명(식별자) 생성
    
    6. 자료형, 길이, 도메인, 제약사항 생성
    
    ----------------------------- 물리 다이어그램 > 물리 ERD
    
    
    
    
    모델링 작업 > ERD > 정규화 > 안정성 높아지고, 작업하기 편한 ERD
    
    
    정규화, Normalization
    - 자료의 손실이나, 불필요한 정보를 없애고, 데이터의 일관성을 유지하며,
      데이터 종속성을 최소화하기 위해 ERD를 수정하는 작업
    - 우리가 만든 테이블(ERD) > 비정형, 비정규화 상태 > 정규화 > 정규화된 구조
    - 제 1정규화 > 제 2정규화 > 제 3정규화 등..
    - 제 1~3정규화
    
    
    관계형 데이터베이스 시스템이 지향하는 데이터베이스의 상태
    1. 최대한 null 상태의 값을 가지지 않는다.
    2. 중복값을 저장하지 않는다.
    3. 원자값(단일값)을 가진다.
    
    
    정규화 목적
    1. null 최대한 제거
    2. 중복값 제거
    3. 자료 삽입, 갱신, 삭제에 따른 이상 현상 제거 > 데이터 무결성 보상
    
    
    이상 현상
    1. 삽입 이상, Insertion Anormaly
        - 특정 테이블에 데이터를 삽입할 때 원하는 데이터까지 같이 넣어야 하는 상황
        
    2. 갱신 이상, Update Anormaly
        - 동일한 데이터가 2개 이상의 테이블에 동시 저장 > 그 중 1개는 수정했지만
            다른 1개를 수정하지 못했을때 상황 > 두 데이터간의 이상 오류 발생
            > 즉, 2개의 데이터 중 어떤 데이터가 올바른 데이터인지 구분 불가능
    
    3. 삭제 이상, Deletion Anormaly
        - 특정 테이블의 데이터를 삭제할 때 원하지 않는 데이터까지 같이 지워지는 상황
        
    
    함수 종속, Functional Dependency
    - 하나의 테이블 내 컬럼끼리의 관계 표현
    - 정규화는 '부분 함수 종속'이나 '이행 함수 종속'을 모두 없애고,
        모든 컬럼 관계를 '완전 함수 종속'으로 만드는 작업이다.
    
    1. 완전 함수 종속, Full Functional Dependency
    2. 부분 함수 종속, Partial Functional Dependency
    3. 이행 함수 종속, Transitive Functional Dependency
    
    
    정규화
    - 비정규화 > 정규화
    - 1NF, 2NF, 3NF(Normal Form)
    - 1개 테이블 -> (정규화) -> 2개 이상의 테이블
    
    제 1 정규화, 1NF
    - 모든 컬럼(속성)은 원자값을 가진다.
    - 여러개의 분리 가능한 값을 1개의 컬럼안에 넣지 말것
    
    제 2정규화, 2NF
    - 기본 키가 아닌 모든 컬럼은 기본키에 완전 함수 종속이어야 한다.
    - 부분 함수 종속 발견!! > 부분 함수 종속 제거!!!
    - 주로 복합키를 가지는 테이블에서 발견되며, 
        일부 컬럼이 복합키 모두에게 종속이 아니라, 
        복합키 일부에만 종속되는 현상이 발견 > 현상 제거
        
    제 3정규화, 3NF
    - 기본 키가 아닌 다른 컬럼에게 종속되는 컬럼이 존재하면 안된다.
    - 이행 함수 종속 발견!! 》 이행 함수 종속 제거!!!
    
    역정규화
    - 정규화된 결과를 다시 원래대로 되돌리는 작업
    - 2개 이상의 테이블 > 1개 테이블
    - 수업 중 사용금지!!


    
    주제 > 네이버 영화
    - 영화 랭크내의 영화 > 50편 영화
    
    1. 데이터 수집 및 분석
        - 모든 데이터 인식
        - DB 데이터베이스 저장할 데이터 선별
        
    2. ERD 작성
        a. 논리 ERD 작성
        b. 물리 ERD 작성
    
    3. DDL 작성
        - CREATE 문 생성
        a. 테이블
        b. 시퀀스
    
    4. DML 작성
        - 데이터 추가
        - 50편 영화
    
    5. SELECT 작성
    
*/










































